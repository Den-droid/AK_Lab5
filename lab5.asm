;-----------------------------------------
;--ЛР№5 Хід виконання програми------------
;----------------Група №5:----------------
;--Яремчук Д.В.--Митєв А.Ю.--Шевчук Д.Д.--		 		  
;-----------------------------------------

IDEAL			; Директива - тип Асемблера tasm 
MODEL SMALL		; Директива - тип моделі пам’яті 
STACK 512		; Директива - розмір стеку 

DATASEG
; Оголошуємо двовимірний масив 16х16
array2Db db 90, 123, 77, 81, 24, 84, 13, 27, 29, 38, 116, 109, 70, 114, 57, 44 
db 88, 89, 69, 49, 52, 60, 34, 95, 30, 14, 18, 107, 119, 15, 118, 73 
db 42, 19, 111, 1, 53, 120, 115, 110, 36, 124, 126, 58, 25, 16, 33, 83 
db 122, 74, 3, 32, 54, 26, 82, 106, 56, 80, 97, 104, 11, 98, 127, 55
db 90, 123, 77, 81, 24, 84, 13, 27, 29, 38, 116, 109, 70, 114, 57, 44 
db 88, 89, 69, 49, 52, 60, 34, 95, 30, 14, 18, 107, 119, 15, 118, 73 
db 42, 19, 111, 1, 53, 120, 115, 110, 36, 124, 126, 58, 25, 16, 33, 83 
db 122, 74, 3, 32, 54, 26, 82, 106, 56, 80, 97, 104, 11, 98, 127, 55
db 90, 123, 77, 81, 24, 84, 13, 27, 29, 38, 116, 109, 70, 114, 57, 44 
db 88, 89, 69, 49, 52, 60, 34, 95, 30, 14, 18, 107, 119, 15, 118, 73 
db 42, 19, 111, 1, 53, 120, 115, 110, 36, 124, 126, 58, 25, 16, 33, 83 
db 122, 74, 3, 32, 54, 26, 82, 106, 56, 80, 97, 104, 11, 98, 127, 55
db 90, 123, 77, 81, 24, 84, 13, 27, 29, 38, 116, 109, 70, 114, 57, 44 
db 88, 89, 69, 49, 52, 60, 34, 95, 30, 14, 18, 107, 119, 15, 118, 73 
db 42, 19, 111, 1, 53, 120, 115, 110, 36, 124, 126, 58, 25, 16, 33, 83 
db 122, 74, 3, 32, 54, 26, 82, 106, 56, 80, 97, 104, 11, 98, 127, 55

day1 db 2,1,1,0,2,0,0,3
day2 db 2,9,1,1,2,0,0,2
day3 db 0,9,0,9,2,0,0,3

exCode db 0

CODESEG
ins_first:
	xor di, di	; очищуємо регістр di
	mov cx, 8	; лічильник - кількість елементів масиву
	loop_first:
	mov al, [day1 + di]     ; записуємо в al елемент масиву
	mov [array2Db + bx + si], al   ; записуємо в масив елемент масиву з датою
	inc si		; для наступного елемента масива з числами
	inc di		; для наступного елемента з масиву дати
	loop loop_first
ret

ins_second:
	xor di, di	; очищуємо регістр di
	mov cx, 8	; лічильник - кількість елементів масиву
	loop_second:
	mov al, [day2 + di]	; записуємо в al елемент масиву
	mov [array2Db + bx + si], al	; записуємо в масив елемент масиву з датою
	inc si		; для наступного елемента масива з числами
	inc di		; для наступного елемента з масиву дати
	loop loop_second
ret

ins_third:
	xor di, di	; очищуємо регістр di
	mov cx, 8	; лічильник - кількість елементів масиву
	loop_third:
	mov al, [day3+di]	; записуємо в al елемент масиву
	mov [array2Db + bx + si], al	; записуємо в масив елемент масиву з датою
	inc si		; для наступного елемента масива з числами
	inc di		; для наступного елемента з масиву дати
	loop loop_third
ret
Start:
mov	ax, @data	  ; ax <- @data
mov	ds, ax		  ; ds <- ax
mov	es, ax		

mov bx, 40h      ; bx - для пересування по вертикалі
mov si, 4h		; si - для пересування по горизонталі
mov cx, 2

loop_main:
push cx			; запамятовуємо лічильник в стеці
call ins_first	; записуємо першу дату в масив
add bx, 10h		; новий рядок
mov si, 4h		; потрібне місце в рядку
call ins_second	; записуємо другу дату в масив
add bx, 10h		; новий рядок
mov si, 4h		; потрібне місце в рядку
call ins_third	; записуємо третю дату в масив
add bx, 10h		; новий рядок
mov si, 4h		; потрібне місце в рядку
pop cx			; повертаємо лічильник
loop loop_main

call ins_first	; записуємо першу дату в масив
add bx, 10h		; новий рядок
mov si, 4h		; потрібне місце в рядку
call ins_second	; записуємо другу дату в масив

mov dx, 0FFh	; лічильник зовнішнього масиву - кількість елементів масиву
oloop:
    mov cx, 0FFh	; лічильник внутрішнього масиву - ; наступний елемент масиву
    lea si, [array2Db]  ; переносимо в si адресу початку масиву чисел

    iloop:
        mov ah, [si + 1]          ; записуємо в ah наступний елемент масиву
        cmp ah, [si]				; порівнюємо два елементи масиву
        jl common                ; якщо наступний менший за попередній, то пропускаємо рядки з обміном елементів
        xchg ah, [si]				 
        mov [si + 1], ah          ; міняємо 2 елементи місцями

        common:
            inc si		; наступний елемент масиву
            loop iloop
dec dx		; наступна ітерація зовнішнього циклу
jnz oloop      ; повторюємо oloop

mov ah,04Ch
mov al,[exCode]   ; отримання коду виходу
int 21h           ; виклик функції 04ch  
;----------
END Start
;----------
